#these fields control the x and y labels and title as shown,
#if omitted no title or lables will be used
[labels]
title = title text
xlab = x Label
ylab = y Label

#used to set destination of graphs, if desttype ==  show graph will be printed to screen using matlib.show()
#for saving to file desttype should be set to document type and name for the regression   should be set to the desired name for the graphic file
pff and png extensions supported
#regressionfile = path to where the image of the regression should be saved if desttype != show
#boxplotfile = path to where the image of the boxplot should be saved if desttype != show
#scatterplotfile = path to where the image of the boxplot should be saved if desttype != show

[destination]
desttype = show
regressionfile = test.pdf
boxplotfile = boxplot.pdf
scatterplotfile = scatter.png

#This section sets a desired line if any for the graph to be used for comparisons defaults to no expected line if ommited
# type is a flag for which type of line you want defaults to value if ommited and value is present, defaults to None if values are not present
#    auto:   creates a red line that has slope equal to the average of the slope of all data lines.
#    pop:    creates a red line that has y values that are the average of all population sizes for that generation(x value).
#    value:  creates a red line with slope equal to the value entered in the expected slope field
#    None:   creates no red line
# expected slope:   is read as a float and is used to produce a line with the expected slope overrides any lambda fields
# lambda:           is converted to a slope using the formula lambda -1 and this is used as the expected slope field
# to produce a graph with no expected line omit this entire section, or enter None in Type
[comparison]
type = auto
expectedslope = -0.1


#this section sets the limits of axis of the graph, by default the graph will be fit to the data, for these to be used both a min and a max value need to be included or defaults will be used

# xMin is the minimum value of x shown,
# xMax is the maximum value of x shown
# yMin is the minimum value of y shown,
# yMax is the maximum value of y shown

[limits]
xMin = 0
xMax= 200

#This section defines items that apply to all uses of the input data,
#startCollect: is an integer field which defines at what generation to start using the data to plot and for statistics,
    #any generations before this one will be ignored default == 0(should be used for empirical, as they will usually only have one population)
#ordering: filepath for the file containing the ordering inormation for data spread over multiple genepopFiles  would be in CSV format if all populations for
    This should be left blank for simulated runs as all generations are saved within the same genepopfile
#OrderSignificantCycle: an integer relaying which generation in the genepop files to be used when ordering (popcolumn in the resulting TSV)(defaults to 1)
[data]
startCollect = 2
ordering = order.csv
OrderSignificantCycle = 1

#this section defines items used for statistical analysis
#alpha: this float value sets the alpha value to be used for confidence intervals this should be a value less than 0.5
    #eg. for a 95% confidence interval alpha should equal 0.05; default is 0.05
#outputFilename: String to indicate where the output file for the statistical data should be saved. default == statsOut.txt
# significantSlope: this should be an often ommited feild, it is a float that sets what value is considered what is a neutral slope defaults == 0
[confidence]
alpha = 0.1
outputFilename = statsOutTest.txt

#this section defines in what order subsample
#GroupBy: takes a string either pop or loci
    #pop: sorts Subsample data by population percent/removal then by loci percent/removal
    #loci: sorts Subsample data by loci percent/removal then by population percent/removal
[SubSample]
sortBy = pop


