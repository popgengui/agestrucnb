#This file provides paramater names and other values used to load an interface
#for the AgeStructureNe GUI tab page that sets up and runs SimuPOP simulations
#Columns give:
#	1.  Actual variable name, ususally the original used in Tiago's 
#	    cfg object (see his sim.py)
#	2.  Formatting and default value fields, semi-colon-delimited
#	    ( many fields currently (20160820) not used).  Field types:
#	    	i.   IDX_TAG_FIELD_LONGNAME=0
#		ii.   IDX_TAG_FIELD_CONFIG_SECTION=1
#		iii.  IDX_TAG_FIELD_PLACEMENT_ORDER=2
#		iv. IDX_TAG_FIELD_COLUMN_NUMBER=3
#		v.  IDX_TAG_FIELD_PARAM_ORDER=4
#		vi.   IDX_TAG_FIELD_DEFAULT_VALUE=5
#		vii.  IDX_TAG_FIELD_PARAM_TYPE=6
#		viii. IDX_TAG_FIELD_MIN_VALUE=7
#		viv.IDX_TAG_FIELD_MAX_VALUE=8
#		x. IDX_TAG_FIELD_TOOL_TIP=9
#		xi. IDX_TAG_FIELD_GUI_CONTROL=10
#		xii. IDX_TAG_FIELD_GUI_CONTROL_LIST=11
#		xiii. IDX_TAG_FIELD_VALIDATION=12
#		xiv. IDX_TAG_FIELD_ASSOC_DEF=13
#		xv. IDX_TAG_FIELD_CONTROL_STATE=14
#		xv. IDX_TAG_DEF_ON_LOADING=15
#Many of the the above fields are not yet used by the interface (as of 2016_08_20 ). Note especially #that for the PGInputSimuPop and PGGuiSimuPop objects default values are 
#not accessed from this file, rather from the config file that is loaded, and, in some 
#cases from the code itself that reads in the config file and sets the input attribute 
#values in PGInputSimuPop. Type checks using value ranges are also ignored by using 
#None;None;None for the type, min, and max fields.
#
NbNc	Nb/Nc;Population;2;0;1;0.0;float;None;None;Nb/Nc, where Nc=No;entry;None;type(x)==float;updateN0EntryBox;enabled;None
NbNe	Nb/Ne;Population;2;0;2;0.0;float;None;None;Nb/Ne ratio.  This value is passed to the Nb estimation function for use in a LDNE bias correction (Waples etal., 2014). The entry is ignored if set to zero.;entry;None;type(x)==float or type(x) == int;None;enabled;None
N0	N0 (Newborns);Population;2;0;3;0;int;None;None;Newborns per cycle. If not editable then calculated using Nb, Nb/Nc, survival rates, and male birth probability.;entry;None;type(x)==int and x >= 0;None;enabled;None
Nb	Nb;Population;2;0;4;0;int;None;None;"Nb";entry;None;type(x)==int and x>= 0;updateN0EntryBox;enabled;None
NbVar	True Nb variance allowed;Population;2;0;5;0.05;float;None;None;â€œExample: if set to 0.01 (1%), and true Nb is 100, the simulated Nb can vary from 99 to 101 ;entry;None;type(x)==float and x >= 0.0;None;enabled;None
#2018_05_16.  New combobox allows user to select how many tries at meeting tolerance test each population gets.  We offer 3 values, since more precision is not needed, and the combobox will keep garbage entries out:
tolerance_tries	Tolerance tries;Simulation;4;0;14;'1000';str;None;None;For each repro cycle, sets the maximum number of tries allowed for a pop to meet the Nb tolerance.;cboxreadonly;( '100', '1000', '10000' );x in [ '100', '1000', '10000' ];None;enabled;None
ages	Ages;Population;2;0;6;0;int;None;None;Ages;entry;None;type(x)==int and x >= 0;None;disabled;None
config_file	Configuration File;Configuration Info;1;1;1;"none";str;None;None;Configuration file;entry;None;type(x)==str;None;enabled;None
life_table_glob	Life Table File(s);Configuration Info;1;1;2;"none";str;None;None;Life table files;entry;None;type(x)==str;None;enabled;None
dataDir	Data Directory;suppress;0;0;1;"";str;None;None;"";entry;None;type(x)==str;None;enabled;None
#suppressing the negative binomial switch as of 2016_08_24, as it is actually
#a param treated as an internal flag, and depends solely on absense/presence of gamma lists (see below)
doNegBinom	Use negative binomial;suppress;0;0;2;False;bool;None;None;Use Negative Binomial;boolradio;None;type(x)==bool;None;enabled;None
fecundityFemale	Female relative fecundity;Population;2;0;7;None;listfloat;None;None;Female Relative Fecundity;entry;None;x is None or ( type(x)==float );None;enabled;None
fecundityMale	Male relative fecundity;Population;2;0;8;None;listfloat;None;None;Male Relative Fecundity;entry;None;x is None or ( type(x)==float );None;enabled;None
forceSkip	Force skip;Population;2;0;9;0.0;float;None;None;For each reproductive cycle, for non-zero female fecundity rates f_a, the probability of f_a being forced to zero.;entry;None;type(x)==float and x >=0.0 and x <= 1.0;None;disabled;None
#gens	Reproductive cycles;Population;2;1;1;1;int;None;None;Reproductive Cycles;entry;None;type(x)==int and x >= 0;None;enabled;None
isMonog	Monogamous;Population;2;0;10;False;bool;None;None;Monogamous or Non-monogamous;checkbutton;None;type(x)==bool;onChangeInMonogamyCheckbox;enabled;None
# 2017_02_24.  We are hiding lambda and replacing it with a new population-reducing parameter, to be applied across age/sex classes
# and called harvest_rate
lbd	Lambda (after burn-in);suppress;0;0;3;1.0;float;None;None;Lambda after burn in;entry;None;type(x)==float and x>=0;None;enabled;None
# 2017_03_09. We replaced the single harvest rate float with a list of range/rate combinations.  See param nbadjustment below.
#harvestrate	Harvest rate (after burn-in);Simulation;4;1;1;0.0;float;None;None;After the burn-in cycles, at each culling, additionaly reduce the population evenly across ages and sexes at this rate;entry;None;type(x)==float and x>=0;None;enabled
litter	Proportional Litter Sizes;Population;2;0;11;None;listint;None;None;When not "None," this list of integers affects litter sizes in one of two ways.~~  1.  If the list has a single, negative number, then its absolute value gives the maximum litter size for any female.~~  2. If positive values totalling n, then each value, with index idx in 1,2,3...n, gives the chance,~~     proportional to the other values, that the next idx offspring, as long as N0 is not reached, will have the same mother.;entry;None;x is None or ( type(x)==int );None;disabled;None
#Note, 2018_05_07, tooltip, "equal_sex_ratio" now called "maintain_distribution".
maleProb	Probability male birth;Population;2;0;12;0.5;float;0;1;Probability male birth.  If cull method is maintain_distribution, this value is forced to 0.5.;entry;None;type(x)==float and x >= 0.0 and x <= 1.0;onUpdateMaleProb;enabled;onLoadingMaleProb
model_name	Model;Configuration Info;1;1;3;"none";str;None;None;Model name;entry;None;type(x)==str;None;enabled;None
#2018_05_26.  We add a flag to allow user to load a file listing loci/chrom/position, to replace our automated loci init using
#summary quants numSNps, numMSats, and numChroms:
use_loci_file	Use Loci File;Genome;3;0;1;False;bool;None;None;Use a file giving  loci names, chromosome names, and loci positions.~~If checked, the file indicated in the loci file entry will be used~~to initialize the simulation using biallelic SNPs with the name, chromosome, and positions given in the file.;checkbutton;None;type(x)==bool;_PGGuiSimuPop__on_change_in_use_loci_file_flag;enabled;None
#2018_05_26.  We add control to load a file whose lines give comma-delimited columns loci-name,chromosome,position
loci_file_name	Loci File;Genome;3;0;2;"None";str;None;None;When enabled by checking "Use Loci File", this box locates a table file whose lines give 3, comma-delimited values without spaces, loci_name, chromosome_name, position.~~The table is used by the simulation to intiialize the genome with, for each entry a biallelic SNP on the indicated chromosome, at the indicated position.~~When the Chrom Loci File box is unchecked, or the value for the file is "None", the simulated genome will be intitialized using the quantities given by the totals~~for SNPs, microsats, and chromosomes given in the textboxes;entrywithbutton;None;type(x)==str;_PGGuiSimuPop__on_button_press_load_loci_file;disabled;None;
numChroms	Number of chromosomes;Genome;3;0;3;0;int;None;None;Number of chromosomes (loci will be evenly distributed across chromosomes).~~The default value, 0, will result in no chrom/loci table file being written.~~(see the LDNe interface:  when no chrom/loci file is provided all loci pairs are considred independent of each other, and are used in the estimation).~~A reminder: a value of 1 chromosome will generate a chrom/loci table that cannot be used by LDNe2 to calculate over loci pairs from different chromosomes.;entry;None;type(x)==int and x >= 0;None;enabled;None
numSNPs	Number of SNPs;Genome;3;0;4;0;int;None;None;Number of SNPs;entry;None;type(x)==int and x >= 0;None;enabled;None
mutFreq	Mutation frequency;Genome;3;0;7;0.0;float;None;None;Mutation Frequency;entry;None;type(x)==float;None;enabled;None
#2018_05_17. New value to be used as recombination intensity in the simulation:
#2018_08_16. We are suppressing the recombination option, and defaulting to no recombination, and so we use "suppress" instead the the "Genome" 
#that indicates into which section the control is to be loaded.
recombination_intensity	Recombination intensity;suppress;0;0;4;0.0;float;None;None;Recombination intensity, as defined in the simuPOP documentation, gives the recombination rate between two adjacent loci as the product of this intensity times the distance between them.;entry;None;type(x)==float and x >= 0.0;None;enabled;None
numMSats	Number of microsatellites;Genome;3;0;5;0;int;None;None;Number of Microsats;entry;None;type(x)==int and x >= 0;None;enabled;None
param_names	param names object;suppress;0;0;5;0;str;None;None;"";entry;None;type(x)==str;None;enabled;None
popSize	Population size;Population;2;0;13;0;int;None;None;Populaion Size;entry;None;type(x)==int and x >= 0;None;enabled;None
reps	Replicates;Simulation;4;0;1;1;int;None;None;Replicates;entry;None;type(x)==int and x>=1;None;enabled;None
skip	Skip breeding probability;Simulation;4;0;2;None;listfloat;None;None;Skip breeding probability;entry;None;x is None or ( type(x)==float and x>=0.0 and x<=1.0 );None;disabled;None
startAlleles	Starting Msat allele total;Genome;3;0;6;0;int;None;None;Starting microsat allele total;entry;None;type(x)==int and x >= 0;None;enabled;None
#Note that "startLambda" has morphed into a burn-in parameter.  Because we no longer are offering a "lambda" as it was applied in earlier versions, the user interface label has been renamed, but the original input attribute is retained to avoid changing the configuration files.
startLambda	Cycles of burn-in;Simulation;4;0;4;99999;int;None;None;Burn-in cycles, during which no Nb tolerance test is applied.~~99999 means there will be no burn-in cycles.;entry;None;type(x)==int and x>=0;None;enabled;None
#2017_04_05.  Now implementing startSAve, which untill now has been suppressed and set to zero
startSave	Start recording at cycle;Simulation;4;0;5;1;int;None;None;The number of the cycle at which to start recording (sampling)  population data.~~Number should be at least 1 and at most equal to the Stop-recording cycle number.;entry;None;validateStartSave;None;enabled;None
#2018_10_23.  Moved from Population section, and renamed from "Reproductive Cycles" to "Stop recording at cycle"
gens	Stop recording at cycle;Simulation;4;0;6;1;int;None;None;The number of the cycle at which to stop recording (sampling) population data.;entry;None;type(x)==int and x >= 0;None;enabled;None
#2019_01_20.  New checkbox to activate/deactivate, as well as new text box that will contain a comma-delimited series of cycle ranges m-n, with m<=n, which, when the control is activated, cause the simulation to restrict the pops it writes to output to those with one of the ranges given by the seris of ranges.
#
do_cycle_filter	Apply cycle filter;Simulation;4;0;7;False;bool;None;None;Apply a cycle range filter as entered below;checkbutton;None;type(x)==bool;onChangeInDoCycleFilter;enabled;onLoadingDoCycleFilter
#
cycle_filter	Cycle filter ranges;Simulation;4;0;8;"1-99999";str;None;None;A comma-separated series of cycle ranges, such that a pop number j will be written to output~~only if min<=j<=max for a range min to max (and is inside values set for start- and stop- recording cycle numbers).~~Between commas you can indicate ranges in one of three ways:~~(1) single positive integer m, with m>=1, indicating that pop (cycle) number m is to be included in output. ~~(2) two pos. integers separated by a hyphen, m-n, with m>=1 and m<=n, giving range m-n ~~(3) Three positive integers of form m-n:i, where m-n meet conditions in (2), and i means that m, m+1, m+2i...m+ji,~~as long as m+ji<n, are written to output.~~For example, to record pop cycle 1, 3 through 6, 20, and 90,92,94,96,98,100 you can enter:~~   1,3-6,20,90-100:2~~Reminder: this filter is also subject to your settings for "Start recording " and "Stop recording" cycle numbers,~~so that cycles that are inside ranges entered here but outside the Start and Stop cycle numbers will be ignored.~~Note, too, that if you list overlapping intervals, they will be merged into a single range.;entry;None;validateCycleRangeFilter;onChangeInCycleFilter;disabled;onLoadingCycleFilter
#
survivalFemale	Female survival;Population;2;0;14;None;listfloat;None;None;Female Survival;entry;None;x is None or ( type(x)==float );updateN0EntryBox;enabled;None
survivalMale	Male survival;Population;2;0;15;None;listfloat;None;None;Male Survival;entry;None;x is None or ( type(x)==float );updateN0EntryBox;enabled;None
gammaAFemale	Female gamma A;Population;2;0;16;None;listfloat;None;None;Female Gamma A;entry;None;x is None or ( type(x)==float );None;enabled;None
gammaBFemale	Female gamma B;Population;2;0;17;None;listfloat;None;None;Female Gamma B;entry;None;x is None or ( type(x)==float );None;enabled;None
gammaAMale	Male gamma A;Population;2;0;18;None;listfloat;None;None;Male Gamma A;entry;None;x is None or ( type(x)==float );None;enabled;None
gammaBMale	Male gamma B;Population;2;0;19;None;listfloat;None;None;Male Gamma B;entry;None;x is None or ( type(x)==float );None;enabled;None
#this is a dummy entry, for an Nb param value that is assigned, checked and calculated within the input object, and accessed only
#by the pgopsimupop object:
Nb_orig_from_pop_section	Nb derived from supplied params, for generator assignment;suppress;0;0;6;0;int;None;None;"";entry;None;type(x)==int;None;enabled;None
#Note, 2018_05_07, cull method "equal_sex_ratio" now called "maintain_distribution"
cull_method	Cull method;Simulation;4;0;0;"maintain_distribution";str;None;None;Method of culling individuals after each reproductive cycle.~~1. Survival rates:  cull using age-specified survival rates.~~2. Maintain distribution:  strictly maintain the sex and age class distribution.;cboxreadonly;( "survival_rates", "maintain_distribution" );x in [ 'survival_rates', 'maintain_distribution' ];onCullMethodSelectionChange;enabled;None
#old param entry:
#harvest	Harvest;Simulation;7;1;1;None;liststr;None;None;For each cycle-number:proportion numeric pair N:i, with population size p, remove i*p individuals at cycle N;entry;None; [ type(eval(i) for i in x.split( ":" ) ] == [ int, float ];onHarvestInputChange;enabled
#
#2017_03_07. Revising/adding code to implement a variable reduction in Nc and Nb, per cycle.  Note that we revised the pgutilityclasses, class ValueValidator so that it can take either a boolean expression in x (the usual case for the validation tags above), or a ref to a function, so that we can create one in the pgguisimupop class, and to the more extensive vaidation needed for the string items in this list paramater:
nbadjustment	Nb and census adjust;Simulation;4;0;9;"2-2:0.0";liststr;None;None;Entries of form min-max:rate to adjust Nb and census size by rate for reproductive cycles min through max.~~Min and max must satisfy 2<=min<=max<=total reproductive cycles.~~When the same cycle(s) is/are assigned more than one rate, the rightmost entry is used.~~When the rate is less than 1.0, the Nb value, and totals of age classes are REDUCED by rate times the current value.~~When rate exceeds 1.0, only Nb is ENLARGED by rate times the current value. The enlarged Nb then is used to calculate a new N0.;entry;None;validateNbAdjustment;None;enabled;None
#numSNPs	Number of SNPs;Genome;3;1;1;0;int;None;None;Number of SNPs;entry;None;type(x)==int and x >= 0;None;enabled;None
het_init_snp	SNP het Init;Simulation;4;0;10;0.5;float;None;None;All SNPs in the initial population will have allele freqencies that generate the expected Heterozygosity set here.  Values accepted in interval: [0.0, 0.5];entry;None;type(x)==float and x >=0.0 and x <= 0.5;None;enabled;None
het_init_msat	Microsat het init;Simulation;4;0;11;0.5;float;None;None;All Microsats in the initial population will have allele freqencies that generate the expected Heterozygosity set here, within 0.001.  Values accepted in interval (0.0,0.85].;entry;None;type(x)==float and x > 0.0 and x <= 0.85;None;enabled;None
do_het_filter	Filter recorded pops by heterozygosity;Simulation;4;0;12;False;bool;None;None;Restrict recorded pops to those whose mean expected heterozygosity is in the range min to max (inclusive).~~Limit the number of pops recorded to the total entered.;checkbutton;None;type(x)==bool;onChangeInHetFilterFlag;enabled;None
het_filter	Het filter parameters;Simulation;4;0;13;"0.00,1.0,99999";str;None;None;If the Het filter checkbox is checked, apply a filter to each pop of the form "m,x,t", where~~  m is the minimum mean expected heterozygosity (mean het),~~  x is the maximum mean het, and~~  t is the total number of populations to record.~~The output genepop file will then record only populations whose mean het falls inside the range,~~and will stop recording them once t populations are recorded (or the last cycle is completed).;entry;None;validateHetFilter;None;disabled;onLoadingHetFilter
